# -*- coding: utf-8 -*-
# <nbformat>3.0</nbformat>

# <codecell>

%matplotlib inline
import time
import numpy as np
from numpy import ma
import matplotlib as mpl
from matplotlib import cm
import matplotlib.pyplot as plt
from matplotlib import ticker
import netCDF4

from utilities import css_styles
css_styles()

# <codecell>

# Global sea surface temperature - just as a test
#model = 'http://thredds.axiomalaska.com/thredds/dodsC/G1_SST.nc'
#standard_name = 'sea_surface_temperature'

orgName='temp_latlon'

#Hindcast
#Get mean value
avg = netCDF4.Dataset('/augie/gluster/data/netCDF/pmel/cccma/Outputs/cccma_h1_average.nc')
core_temp_avg = ma.masked_array(avg.variables[orgName][:])
mask=ma.getmask(core_temp_avg)

#Get Sum of squares by multiplying average square by number of counts
stddev = netCDF4.Dataset('/augie/gluster/data/netCDF/pmel/cccma/Outputs/cccma_h1_rmssdn.nc')
core_temp_stddev = ma.masked_array(stddev.variables[orgName][:], mask)

#Projected
#Get mean value
pavg = netCDF4.Dataset('/augie/gluster/data/netCDF/pmel/cccma/Outputs/cccma_h2_average.nc')
cccma_temp_avg = ma.masked_array(pavg.variables[orgName][:])

#Get Sum of squares by multiplying average square by number of counts
pstddev = netCDF4.Dataset('/augie/gluster/data/netCDF/pmel/cccma/Outputs/cccma_h2_rmssdn.nc')
cccma_temp_stddev = ma.masked_array(pstddev.variables[orgName][:], mask)

# <codecell>

test = netCDF4.Dataset('/augie/gluster/data/netCDF/pmel/cccma/cccma_week1001.nc')
time_var = np.array(test.variables['TIME'])
time.strftime("%a, %d %b %Y %H:%M:%S +0000", time.localtime(time_var[0]-2208988800))

# <codecell>

test = netCDF4.Dataset('/augie/gluster/data/netCDF/pmel/cccma/cccma_week1964.nc')
time_var = np.array(test.variables['TIME'])
time.strftime("%a, %d %b %Y %H:%M:%S +0000", time.localtime(time_var[0]-2208988800))

# <codecell>

test = netCDF4.Dataset('/augie/gluster/data/netCDF/pmel/cccma/cccma_week1965.nc')
time_var = np.array(test.variables['TIME'])
time.strftime("%a, %d %b %Y %H:%M:%S +0000", time.localtime(time_var[0]-2208988800))

# <codecell>

test = netCDF4.Dataset('/augie/gluster/data/netCDF/pmel/cccma/cccma_week2928.nc')
time_var = np.array(test.variables['TIME'])
time.strftime("%a, %d %b %Y %H:%M:%S +0000", time.localtime(time_var[0]-2208988800))

# <codecell>

vmin = 0.0
vmax = 8
cmap = 'bwr'
origin = 'lower'
interpolation = 'nearest'
orientation = 'horizontal'
shrink = 0.8

def create_subplot(data, pltnum, title):
    plt.subplot(2,2,pltnum)
    plt.title(title)
    img = plt.imshow(data, vmin=vmin, vmax=vmax, 
               origin='lower', interpolation='nearest', cmap = cmap)
    
    return img

#Create subplots
fig = plt.figure(num=None, figsize=(16,10))
cm.bwr.set_bad('black', 0.8) # Set masked values to dark gray
img = create_subplot(core_temp_avg[0,10], 1, 'CCCma H1 Mean')
img = create_subplot(core_temp_stddev[0,10], 3, 'CCCma H1 Std Dev')
img = create_subplot(cccma_temp_avg[0,10], 2, 'CCCma H2 Mean')
img = create_subplot(cccma_temp_stddev[0,10], 4, 'CCCma H2 Std Dev')


#Add pretty colorbar
cax=fig.add_axes([0.25, 0.02, 0.5, 0.03]) #[left, bottom, width, height]
cb = plt.colorbar(img, cax=cax, orientation=orientation, extend='both')
cb.locator = ticker.MaxNLocator(nbins=8)
cb.update_ticks()
plt.text(0.5, -2, 'Degrees C')

plt.show()

# <codecell>

#This plots through depth at a point
fig2=plt.figure(num=None, figsize=(16,5))
plt.plot(core_temp_avg[0,:,50,50], color='black', marker='o',
         markersize=4, markerfacecolor='red', markeredgewidth=1, label='Mean')
plt.plot(core_temp_avg[0,:,50,50], color='black', marker='o',
         markersize=4, markerfacecolor='red', markeredgewidth=1, label='Mean')
plt.plot(core_temp_avg[0,:,50,50], color='black', marker='o', markersize=4, markerfacecolor='red', markeredgewidth=1, label='Mean')

plt.grid(True)
plt.legend(loc=2, ncol=1, borderaxespad=0.5)
plt.show()

# <codecell>


